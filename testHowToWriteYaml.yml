# YAML 的配置文件后缀为 .yml，如：runoob.yml 。

# 基本语法

# 大小写敏感, 这个得记住。
# 使用缩进表示层级关系, 这个得记住。
# 缩进不允许使用 tab，只允许空格, 我个人建议跟一般写python时的风格一样，用四个空格, 这个得记住。
# 缩进的空格数不重要，只要相同层级的元素左对齐即可, 这个得记住。
# # 表示注释, 这个得记住。
# : 号后面要加空格, 这个得记住。



# YAML 对象，对象键值对使用冒号结构表示 key: value，冒号后面要加一个空格。
# 可以使用行内形式表示
key: {key1: value1, key2: value2, ...}
# 还可以使用缩进表示层级关系；
key:
    child-key: value
    child-key2: value2



# YAML 数组 以 - 开头的行表示构成一个数组：Yaml 的数组是以 - 开头，并且 - 与正文之间有一个空格。
# 数组，可以使用行内表示：
key: [A, B, C]
# 也可以使用缩进表示：
key:
    - A
    - B
    - C

# 数据结构的子成员是一个数组，则可以在该项下面缩进一个空格。

-
    - A
    - B
    - C

# 一个相对复杂的例子：
companies:
    -
        id: 1
        name: company1
        price: 200W
    -
        id: 2
        name: company2
        price: 500W
# 意思是 companies 属性是一个数组，每一个数组元素又是由 id、name、price 三个属性构成。
# 上面的复杂例子数组也可以使用流式(flow)的方式表示如下：
companies: [{id: 1,name: company1,price: 200W},{id: 2,name: company2,price: 500W}]


# 复合结构
# 数组和对象可以构成复合结构，例：
languages:
  - Ruby
  - Perl
  - Python
websites:
  YAML: yaml.org
  Ruby: ruby-lang.org
  Python: python.org
  Perl: use.perl.org

# 上面的 YAML 内容转换为 json 为：
{
  languages: [ 'Ruby', 'Perl', 'Python'],
  websites: {
    YAML: 'yaml.org',
    Ruby: 'ruby-lang.org',
    Python: 'python.org',
    Perl: 'use.perl.org'
  }
}



# 纯量

# 纯量是最基本的，不可再分的值，包括：
# 字符串
# 布尔值
# 整数
# 浮点数
# Null
# 时间
# 日期

# 使用一个例子来快速了解纯量的基本使用：

boolean:
    - TRUE  #true,True都可以
    - FALSE  #false，False都可以
float:
    - 3.14
    - 6.8523015e+5  #可以使用科学计数法
int:
    - 123
    - 0b1010_0111_0100_1010_1110    #二进制表示
null:
    nodeName: 'node'
    parent: ~  #使用~表示null
string:
    - 哈哈
    - 'Hello world'  #可以使用双引号或者单引号包裹特殊字符
    - newline
      newline2    #字符串可以拆成多行，每一行会被转化成一个空格
date:
    - 2018-02-17    #日期必须使用ISO 8601格式，即yyyy-MM-dd
datetime:
    -  2018-02-17T15:02:31+08:00    #时间使用ISO 8601格式，时间和日期之间使用T连接，最后使用+代表时区
